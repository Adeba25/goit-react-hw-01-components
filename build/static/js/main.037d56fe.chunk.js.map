{"version":3,"sources":["Components/Profile/ProfileStats/ProfileStats.module.css","Components/TransactionHistory/TransactionHistory.module.css","Components/Profile/Profile.module.css","Components/Statistics/Statistics.module.css","Components/FriendList/FriendListItem/FriendListItem.module.css","Components/Profile/ProfileStats/ProfileStats.jsx","Components/Profile/Profile.jsx","Components/Statistics/randomColor.js","Components/Statistics/Statistics.jsx","Components/FriendList/FriendListItem/FriendListItem.jsx","Components/FriendList/FriendList.jsx","Components/TransactionHistory/TransactionHistory.jsx","Components/App.jsx","index.js"],"names":["module","exports","ProfileStats","followers","views","likes","className","styles","stats","element","label","quantity","Profile","name","tag","location","avatar","container","description","userAvatar","src","alt","defaultProps","getRandomColor","Math","floor","random","toString","Statistics","title","length","statList","map","stat","key","id","statItem","style","width","backgroundColor","randomColor","percentage","FriendListItem","isOnline","item","isOffline","FriendList","friends","friend","TransactionHistory","items","transactionTable","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.037d56fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"ProfileStats_stats__22Muo\",\"element\":\"ProfileStats_element__28uoK\",\"label\":\"ProfileStats_label__mdS4k\",\"quantity\":\"ProfileStats_quantity__34VnI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionTable\":\"TransactionHistory_transactionTable__YrjD6\",\"title\":\"TransactionHistory_title__1Sgn7\",\"item\":\"TransactionHistory_item__2BSCF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Profile_description__1kf0a\",\"container\":\"Profile_container__1lPjt\",\"userAvatar\":\"Profile_userAvatar__2SRX4\",\"name\":\"Profile_name__2GXfq\",\"tag\":\"Profile_tag__22J_i\",\"location\":\"Profile_location__3Q59I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__R8uTo\",\"container\":\"Statistics_container__dhuJj\",\"statList\":\"Statistics_statList__2-ywY\",\"statItem\":\"Statistics_statItem__2Y4Gy\",\"label\":\"Statistics_label__kJ-gS\",\"percentage\":\"Statistics_percentage__2oafK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__36ncW\",\"status\":\"FriendListItem_status__14JTB\",\"isOnline\":\"FriendListItem_isOnline__OH5zj FriendListItem_status__14JTB\",\"isOffline\":\"FriendListItem_isOffline__20k0x FriendListItem_status__14JTB\",\"name\":\"FriendListItem_name__-WIJp\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ProfileStats.module.css';\r\n\r\nconst ProfileStats = ({ followers = 0, views = 0, likes = 0 }) => (\r\n  <ul className={styles.stats}>\r\n    <li className={styles.element}>\r\n      <span className={styles.label}>Followers</span>\r\n      <span className={styles.quantity}>{followers}</span>\r\n    </li>\r\n    <li className={styles.element}>\r\n      <span className={styles.label}>Views</span>\r\n      <span className={styles.quantity}>{views}</span>\r\n    </li>\r\n    <li className={styles.element}>\r\n      <span className={styles.label}>Likes</span>\r\n      <span className={styles.quantity}>{likes}</span>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nProfileStats.propTypes = {\r\n  followers: PropTypes.number.isRequired,\r\n  views: PropTypes.number.isRequired,\r\n  likes: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default ProfileStats;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ProfileStats from './ProfileStats/ProfileStats';\r\n\r\nimport styles from './Profile.module.css';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => (\r\n  <div className={styles.container}>\r\n    <div className={styles.description}>\r\n      <img className={styles.userAvatar} src={avatar} alt=\"user avatar\" />\r\n      <p className={styles.name}>{name}</p>\r\n      <p className={styles.tag}>@{tag}</p>\r\n      <p className={styles.location}>{location}</p>\r\n    </div>\r\n\r\n    <ProfileStats\r\n      followers={stats.followers}\r\n      views={stats.views}\r\n      likes={stats.likes}\r\n    />\r\n  </div>\r\n);\r\n\r\nProfile.defaultProps = {\r\n  name: 'User Name',\r\n  tag: 'User tag',\r\n  location: 'User location',\r\n  avatar: '',\r\n  stats: {\r\n    followers: 0,\r\n    views: 0,\r\n    likes: 0,\r\n  },\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.exact({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }).isRequired\r\n   \r\n};\r\n\r\nexport default Profile;\r\n","function getRandomColor() {\r\n  return '#' + Math.floor(Math.random() * 16777215).toString(16);\r\n}\r\n\r\nexport default getRandomColor;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport randomColor from './randomColor';\r\n\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ title = 'Default title', stats = [] }) => (\r\n  <section className={styles.container}>\r\n    {title.length > 0 && <h2 className={styles.title}>{title}</h2>}\r\n\r\n    <ul className={styles.statList}>\r\n      {stats.map(stat => (\r\n        <li\r\n          key={stat.id}\r\n          className={styles.statItem}\r\n          style={{\r\n            width: 300 / stats.length,\r\n            backgroundColor: randomColor(),\r\n          }}\r\n        >\r\n          <span className={styles.label}>{stat.label}</span>\r\n          <span className={styles.percentage}>{stat.percentage}%</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            label: PropTypes.string.isRequired,\r\n            percentage: PropTypes.number.isRequired,\r\n        }).isRequired\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './FriendListItem.module.css';\r\n\r\nconst FriendListItem = ({\r\n  avatar = '',\r\n  name = 'FriendName',\r\n  isOnline = null,\r\n  id = null,\r\n}) => (\r\n  <>\r\n    <li key={id} className={styles.item}>\r\n      <span className={isOnline ? styles.isOnline : styles.isOffline}></span>\r\n      <img className=\"avatar\" alt=\"User avatar\" src={avatar} />\r\n      <p className={styles.name}>{name}</p>\r\n    </li>\r\n  </>\r\n);\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport FriendListItem from './FriendListItem/FriendListItem';\r\n\r\nconst FriendList = ({ friends = [] }) => (\r\n  <ul>\r\n    {friends.map(friend => (\r\n      <FriendListItem\r\n        avatar={friend.avatar}\r\n        name={friend.name}\r\n        isOnline={friend.isOnline}\r\n        key={friend.id}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items = [] }) => (\r\n  <table className={styles.transactionTable}>\r\n    <thead>\r\n      <tr>\r\n        <th className={styles.title}>Type</th>\r\n        <th className={styles.title}>Amount</th>\r\n        <th className={styles.title}>Currency</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {items.map(item => (\r\n        <tr key={item.id}>\r\n          <td className={styles.item}>{item.type}</td>\r\n          <td className={styles.item}>{item.amount}</td>\r\n          <td className={styles.item}>{item.currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\n\nimport Profile from './Profile/Profile';\nimport Statistics from './Statistics/Statistics';\nimport FriendList from './FriendList/FriendList';\nimport TransactionHistory from './TransactionHistory/TransactionHistory'\n\nimport user from './user.json';\nimport statisticalData from './statistical-data.json';\nimport friends from './friends.json';\nimport transactions from './transactions.json'\n\nconst App = () => (\n  <>\n    <Profile\n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n    />\n\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\n\n    <FriendList friends={friends} />\n\n    <TransactionHistory items = {transactions}/>\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}