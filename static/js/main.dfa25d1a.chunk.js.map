{"version":3,"sources":["Components/Profile/Profile.module.css","Components/TransactionHistory/TransactionHistory.module.css","Components/Statistics/Statistics.module.css","Components/FriendList/FriendListItem/FriendListItem.module.css","Components/Profile/Profile.jsx","Components/Statistics/randomColor.js","Components/Statistics/Statistics.jsx","Components/FriendList/FriendListItem/FriendListItem.jsx","Components/FriendList/FriendList.jsx","Components/TransactionHistory/TransactionHistory.jsx","Components/App.jsx","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","container","description","userAvatar","src","alt","element","label","quantity","followers","views","likes","defaultProps","getRandomColor","Math","floor","random","toString","Statistics","title","length","statList","map","stat","key","id","statItem","style","width","backgroundColor","randomColor","percentage","FriendListItem","isOnline","item","isOffline","FriendList","friends","friend","TransactionHistory","items","transactionTable","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dfa25d1a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Profile_description__2MgiS\",\"container\":\"Profile_container__HPuGw\",\"userAvatar\":\"Profile_userAvatar__3wm6J\",\"name\":\"Profile_name__1-9NF\",\"tag\":\"Profile_tag__2m4Bo\",\"location\":\"Profile_location__LJEiQ\",\"stats\":\"Profile_stats__2CZEg\",\"element\":\"Profile_element__rDF5F\",\"label\":\"Profile_label__27fTf\",\"quantity\":\"Profile_quantity__2XWu6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionTable\":\"TransactionHistory_transactionTable__g4E64\",\"title\":\"TransactionHistory_title__EwDex\",\"item\":\"TransactionHistory_item__3FUv_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__2AYmP\",\"container\":\"Statistics_container__3Jm3t\",\"statList\":\"Statistics_statList__3ryKg\",\"statItem\":\"Statistics_statItem__jJ_pH\",\"label\":\"Statistics_label__2xQMh\",\"percentage\":\"Statistics_percentage__3IwA6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__133F4\",\"status\":\"FriendListItem_status__2LLAo\",\"isOnline\":\"FriendListItem_isOnline__2tn2C FriendListItem_status__2LLAo\",\"isOffline\":\"FriendListItem_isOffline__1-ciw FriendListItem_status__2LLAo\",\"name\":\"FriendListItem_name__2zs8P\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Profile.module.css';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => (\r\n  <div className={styles.container}>\r\n    <div className={styles.description}>\r\n      <img className={styles.userAvatar} src={avatar} alt=\"user avatar\" />\r\n      <p className={styles.name}>{name}</p>\r\n      <p className={styles.tag}>@{tag}</p>\r\n      <p className={styles.location}>{location}</p>\r\n    </div>\r\n\r\n    <ul className={styles.stats}>\r\n      <li className={styles.element}>\r\n        <span className={styles.label}>Followers</span>\r\n        <span className={styles.quantity}>{stats.followers}</span>\r\n      </li>\r\n      <li className={styles.element}>\r\n        <span className={styles.label}>Views</span>\r\n        <span className={styles.quantity}>{stats.views}</span>\r\n      </li>\r\n      <li className={styles.element}>\r\n        <span className={styles.label}>Likes</span>\r\n        <span className={styles.quantity}>{stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nProfile.defaultProps = {\r\n  name: 'User Name',\r\n  tag: 'User tag',\r\n  location: 'User location',\r\n  avatar: '',\r\n  stats: {\r\n    followers: 0,\r\n    views: 0,\r\n    likes: 0,\r\n  },\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.exact({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","function getRandomColor() {\r\n  return '#' + Math.floor(Math.random() * 16777215).toString(16);\r\n}\r\n\r\nexport default getRandomColor;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport randomColor from './randomColor';\r\n\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ title = 'Default title', stats = [] }) => (\r\n  <section className={styles.container}>\r\n    {title.length > 0 && <h2 className={styles.title}>{title}</h2>}\r\n\r\n    <ul className={styles.statList}>\r\n      {stats.map(stat => (\r\n        <li\r\n          key={stat.id}\r\n          className={styles.statItem}\r\n          style={{\r\n            width: 300 / stats.length,\r\n            backgroundColor: randomColor(),\r\n          }}\r\n        >\r\n          <span className={styles.label}>{stat.label}</span>\r\n          <span className={styles.percentage}>{stat.percentage}%</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n  ),\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './FriendListItem.module.css';\r\n\r\nconst FriendListItem = ({\r\n  avatar = '',\r\n  name = 'FriendName',\r\n  isOnline = null,\r\n  id = null,\r\n}) => (\r\n  <>\r\n    <li key={id} className={styles.item}>\r\n      <span className={isOnline ? styles.isOnline : styles.isOffline}></span>\r\n      <img className=\"avatar\" alt=\"User avatar\" src={avatar} />\r\n      <p className={styles.name}>{name}</p>\r\n    </li>\r\n  </>\r\n);\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport FriendListItem from './FriendListItem/FriendListItem';\r\n\r\nconst FriendList = ({ friends = [] }) => (\r\n  <ul>\r\n    {friends.map(friend => (\r\n      <FriendListItem\r\n        avatar={friend.avatar}\r\n        name={friend.name}\r\n        isOnline={friend.isOnline}\r\n        key={friend.id}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items = [] }) => (\r\n  <table className={styles.transactionTable}>\r\n    <thead>\r\n      <tr>\r\n        <th className={styles.title}>Type</th>\r\n        <th className={styles.title}>Amount</th>\r\n        <th className={styles.title}>Currency</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {items.map(item => (\r\n        <tr key={item.id}>\r\n          <td className={styles.item}>{item.type}</td>\r\n          <td className={styles.item}>{item.amount}</td>\r\n          <td className={styles.item}>{item.currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\n\nimport Profile from './Profile/Profile';\nimport Statistics from './Statistics/Statistics';\nimport FriendList from './FriendList/FriendList';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\n\nimport user from './user.json';\nimport statisticalData from './statistical-data.json';\nimport friends from './friends.json';\nimport transactions from './transactions.json';\n\nconst App = () => (\n  <>\n    <Profile\n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n    />\n\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\n\n    <FriendList friends={friends} />\n\n    <TransactionHistory items={transactions} />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}